<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace WriterAi\SDK;

class Writer
{
	public const SERVERS = [
		'https://enterprise-api.writer.com',
	];
  	
    /**
     * Methods related to AI Content Detector
     * 
     * @var AIContentDetector $$aiContentDetector
     */
	public AIContentDetector $aiContentDetector;
	
    /**
     * Methods related to Billing
     * 
     * @var Billing $$billing
     */
	public Billing $billing;
	
    /**
     * Methods related to CoWrite
     * 
     * @var CoWrite $$coWrite
     */
	public CoWrite $coWrite;
	
    /**
     * Methods related to Completions
     * 
     * @var Completions $$completions
     */
	public Completions $completions;
	
    /**
     * Methods related to Content
     * 
     * @var Content $$content
     */
	public Content $content;
	
    /**
     * Methods related to Download the customized model
     * 
     * @var DownloadTheCustomizedModel $$downloadTheCustomizedModel
     */
	public DownloadTheCustomizedModel $downloadTheCustomizedModel;
	
    /**
     * Methods related to Files
     * 
     * @var Files $$files
     */
	public Files $files;
	
    /**
     * Methods related to Model Customization
     * 
     * @var ModelCustomization $$modelCustomization
     */
	public ModelCustomization $modelCustomization;
	
    /**
     * Methods related to Model
     * 
     * @var Models $$models
     */
	public Models $models;
	
    /**
     * Methods related to Snippets
     * 
     * @var Snippet $$snippet
     */
	public Snippet $snippet;
	
    /**
     * Methods related to Styleguide
     * 
     * @var Styleguide $$styleguide
     */
	public Styleguide $styleguide;
	
    /**
     * Methods related to Terminology
     * 
     * @var Terminology $$terminology
     */
	public Terminology $terminology;
	
    /**
     * Methods related to User
     * 
     * @var User $$user
     */
	public User $user;
		
	private SDKConfiguration $sdkConfiguration;

	/**
	 * Returns a new instance of the SDK builder used to configure and create the SDK instance.
	 * 
	 * @return WriterBuilder
	 */
	public static function builder(): WriterBuilder
	{
		return new WriterBuilder();
	}

	/**
	 * @param SDKConfiguration $sdkConfiguration
	 */
	public function __construct(SDKConfiguration $sdkConfiguration)
	{
		$this->sdkConfiguration = $sdkConfiguration;
		
		$this->aiContentDetector = new AIContentDetector($this->sdkConfiguration);
		
		$this->billing = new Billing($this->sdkConfiguration);
		
		$this->coWrite = new CoWrite($this->sdkConfiguration);
		
		$this->completions = new Completions($this->sdkConfiguration);
		
		$this->content = new Content($this->sdkConfiguration);
		
		$this->downloadTheCustomizedModel = new DownloadTheCustomizedModel($this->sdkConfiguration);
		
		$this->files = new Files($this->sdkConfiguration);
		
		$this->modelCustomization = new ModelCustomization($this->sdkConfiguration);
		
		$this->models = new Models($this->sdkConfiguration);
		
		$this->snippet = new Snippet($this->sdkConfiguration);
		
		$this->styleguide = new Styleguide($this->sdkConfiguration);
		
		$this->terminology = new Terminology($this->sdkConfiguration);
		
		$this->user = new User($this->sdkConfiguration);
	}
}