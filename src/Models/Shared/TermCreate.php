<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace WriterAi\SDK\Models\Shared;


class TermCreate
{
	#[\JMS\Serializer\Annotation\SerializedName('approvedTermExtension')]
    #[\JMS\Serializer\Annotation\Type('WriterAi\SDK\Models\Shared\ApprovedTermExtensionCreate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ApprovedTermExtensionCreate $approvedTermExtension = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('caseSensitive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $caseSensitive;
    
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * $examples
     * 
     * @var ?array<\WriterAi\SDK\Models\Shared\TermExampleCreate> $examples
     */
	#[\JMS\Serializer\Annotation\SerializedName('examples')]
    #[\JMS\Serializer\Annotation\Type('array<WriterAi\SDK\Models\Shared\TermExampleCreate>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $examples = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('highlight')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $highlight = null;
    
    /**
     * $linkedTerms
     * 
     * @var ?array<\WriterAi\SDK\Models\Shared\LinkedTermCreate> $linkedTerms
     */
	#[\JMS\Serializer\Annotation\SerializedName('linkedTerms')]
    #[\JMS\Serializer\Annotation\Type('array<WriterAi\SDK\Models\Shared\LinkedTermCreate>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $linkedTerms = null;
    
    /**
     * $mistakes
     * 
     * @var ?array<\WriterAi\SDK\Models\Shared\TermMistakeCreate> $mistakes
     */
	#[\JMS\Serializer\Annotation\SerializedName('mistakes')]
    #[\JMS\Serializer\Annotation\Type('array<WriterAi\SDK\Models\Shared\TermMistakeCreate>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $mistakes = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('pos')]
    #[\JMS\Serializer\Annotation\Type('enum<WriterAi\SDK\Models\Shared\TermCreatePos>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TermCreatePos $pos = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reference = null;
    
    /**
     * $tags
     * 
     * @var ?array<\WriterAi\SDK\Models\Shared\TermTagCreate> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<WriterAi\SDK\Models\Shared\TermTagCreate>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('term')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $term;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<WriterAi\SDK\Models\Shared\TermCreateType>')]
    public TermCreateType $type;
    
	public function __construct()
	{
		$this->approvedTermExtension = null;
		$this->caseSensitive = false;
		$this->description = null;
		$this->examples = null;
		$this->highlight = null;
		$this->linkedTerms = null;
		$this->mistakes = null;
		$this->pos = null;
		$this->reference = null;
		$this->tags = null;
		$this->term = "";
		$this->type = \WriterAi\SDK\Models\Shared\TermCreateType::APPROVED;
	}
}
